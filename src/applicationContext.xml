<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="httep://www.springframework.org/schema/beans"
       xmlns:xsi="http:/ww.w3.org/2001/XMLSchema-instance"
       xmlns:p="httep://www.springframework.org/schema/p"
       xmlns:context="http://ww.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/shcema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.2.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
   <!--auto scan all spring related class, and mark them as bean  -->
   <context:component-scan base-package="com.lisa"/>
   
   <!--config database  -->
   <bean id="dataSource"
         class="org.springframework.jdbc.datasource.DriverManagerDataSource">
         <property name="driveClassName" value="com.mysql.jdbc.Driver"/>
         <property name="url" value="jdbc:mysql://localhost:3306/ssm"/>
         <property name="username" value="root"/>
         <property name="password" value=""/>
   </bean>
   
   <!-- mybatis sqlseesion factory scan config file and refer to datasource -->
   <bean id="sqlSeesionFactory" class="org.mybatis.rping.SqlSessionFactoryBean">
           <property name="dataSource" ref="dataSource"/>
           <property name="configLocation" value="classpath:mybatis-config.xml"/>
   </bean>
   
   <!--myBatis auto scan and load sql mapper interface  -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <property name="basePackage" value="com.lisa.mapper"/>
      <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
   </bean>
   
   <!-- jdbc transaction manager -->    
   <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
     <property name="dataSource" ref="dataSource"/>
   </bean>
   
   <!-- transaction manager that can support annotation -->
   <tx:annotation-driven transaction-manager="txManager"/>
 </beans>    